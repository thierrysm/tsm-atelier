name: Upgrade Gradle wrapper

on:
  schedule:
    - cron: "0 3 * * MON"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-gradle-wrapper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Setup JDK
        uses: actions/setup-java@v5.0.0
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Get current Gradle version
        run: |
          CURRENT=$(grep distributionUrl gradle/wrapper/gradle-wrapper.properties | sed 's/.*gradle-\(.*\)-bin.*/\1/')
          echo "CURRENT_VERSION=$CURRENT" >> $GITHUB_ENV

      - name: Get latest Gradle version from API
        run: |
          LATEST=$(curl -s https://services.gradle.org/versions/current | jq -r .version)
          echo "LATEST_VERSION=$LATEST" >> $GITHUB_ENV

      - name: Skip if already up-to-date
        if: env.CURRENT_VERSION == env.LATEST_VERSION
        run: |
          echo "✅ Gradle is already up-to-date ($CURRENT_VERSION)"
          exit 0

      - name: Upgrade Gradle wrapper
        run: ./gradlew wrapper --gradle-version $LATEST_VERSION

      - name: Build and test project
        run: ./gradlew build --no-daemon

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Check if a PR for this Gradle version already exists
        id: list_prs
        uses: actions/github-script@v7
        with:
          script: |
            const latestVersion = process.env.LATEST_VERSION;
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
            });
            const exists = pulls.data.some(pr => 
              pr.title.includes(`Upgrade Gradle wrapper`) &&
              pr.title.includes(`to ${latestVersion}`)
            );
            core.setOutput("pr_exists", exists ? "true" : "false");

      - name: Create pull request
        if: steps.list_prs.outputs.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: build/upgrade-gradle-wrapper-${{ steps.date.outputs.date }}
          commit-message: 'build: upgrade Gradle wrapper to ${{ env.LATEST_VERSION }}'
          title: Upgrade Gradle wrapper from ${{ env.CURRENT_VERSION }} to ${{ env.LATEST_VERSION }}
          body: |
            This PR upgrades the Gradle wrapper from **${{ env.CURRENT_VERSION }}** to **${{ env.LATEST_VERSION }}**.
            
            ✅ Build and tests have passed successfully.
            
            Auto-generated by [upgrade-gradle-wrapper.yml](https://github.com/${{ github.repository }}/actions/workflows/upgrade-gradle-wrapper.yml)
